{
  "variables": {
    "branch": "{{env `CIRCLE_BRANCH` }}",
    "commit": "{{env `CIRCLE_SHA1` }}",
    "build": "{{env `CIRCLE_BUILD_NUM` }}",
    "packer_instance_profile": "{{env `AWS_PACKER_EC2_INSTANCE_PROFILE` }}",
    "aws_production_account_id": "{{env `AWS_PRODUCTION_ACCOUNT_ID` }}"
  },
  "builders": [{
    "type": "amazon-ebs",
    "region": "eu-west-1",
    "source_ami_filter": {
      "filters": {
        "virtualization-type": "hvm",
        "name": "ubuntu/images/*ubuntu-bionic-18.04-amd64-server-*",
        "root-device-type": "ebs"
      },
      "owners": ["099720109477"],
      "most_recent": true
    },
    "instance_type": "t3.medium",
    "ssh_username": "ubuntu",
    "ami_name": "opendata-{{ user `branch` }}-{{timestamp}}",
    "ami_users": [
      "{{ user `aws_production_account_id` }}"
    ],
    "snapshot_users": [
      "{{ user `aws_production_account_id` }}"
    ],
    "iam_instance_profile": "{{ user `packer_instance_profile` }}",
    "run_tags": {
      "Branch": "{{ user `branch` }}",
      "Commit": "{{ user `commit` }}",
      "Build": "{{ user `build` }}",
      "Base_AMI_Name": "{{ .SourceAMIName }}",
      "Base_AMI_ID": "{{ .SourceAMI }}"
    },
    "tags": {
      "Branch": "{{ user `branch` }}",
      "Commit": "{{ user `commit` }}",
      "Build": "{{ user `build` }}",
      "Base_AMI_Name": "{{ .SourceAMIName }}",
      "Base_AMI_ID": "{{ .SourceAMI }}"
    }
  }],
  "provisioners": [
    {
      "type": "shell",
      "inline": [
        "while [ ! -f /var/lib/cloud/instance/boot-finished ]; do echo 'Waiting for cloud-init...'; sleep 1; done"
      ]
    },
    {
      "type": "shell",
      "inline": ["sudo apt-get install -y python"]
    },
    {
      "type": "ansible",
      "playbook_file": "single-server.yml",
      "inventory_directory": "inventories",
      "groups": ["packer"],
      "user": "operator",
      "ansible_env_vars": ["ANSIBLE_HOST_KEY_CHECKING=False"],
      "extra_arguments": [
        "--skip-tags", "configure,dependency_role"
      ]
    }
  ],
  "post-processors": [
    [
      {
        "output": "manifest.json",
        "strip_path": true,
        "type": "manifest",
        "custom_data": {
          "Branch": "{{ user `branch` }}",
          "Commit": "{{ user `commit` }}",
          "Build": "{{ user `build` }}"
        }
      }
    ]
  ]
}
