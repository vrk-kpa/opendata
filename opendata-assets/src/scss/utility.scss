@import 'variables';
@import 'mixins/mixins';

// -------
// FLEXBOX
// -------

/**
$function .make-display-classes
$description
creates bootstrap like display classes
https://getbootstrap.com/docs/4.0/utilities/display/#notation

$output
example:
.d-flex {
    display: flex;
}
@media (max-width: 765px) {
    .d-flex-xs {
        display: flex;
    }
}
*/

$display-properties: none,
  inline,
  inline-block,
  block,
  table,
  table-cell,
  table-row,
  flex,
  inline-flex;

@mixin make-display-mq($property, $i: length($breakpoints)) {
  @if $i > 0 {
    @include make-display-mq($property, $i - 1);
    $pair: nth($breakpoints, $i);
    $key: nth($pair, 1);
    $value: nth($pair, 2);

    @media (max-width: $value) {
      &-#{$key} {
        display: $property;
      }
    }
  }
}

@mixin make-display-class($property) {
  .d-#{$property} {
    display: $property;

    @include make-display-mq($property);
  }
}

@mixin make-display-classes($i: length($display-properties)) {
  @if $i > 0 {
    @include make-display-classes($i - 1);
    $property: nth($display-properties, $i);

    @include make-display-class($property);
  }
}
// Call the functions and generate classes
@include make-display-classes();

.flex-wrap {
  flex-wrap: wrap;
}

.flex-nowrap {
  flex-wrap: nowrap;
}

.justify-content {
  &-start {
    justify-content: flex-start;
  }

  &-end {
    justify-content: flex-end;
  }

  &-around {
    justify-content: space-around;
  }

  &-center {
    justify-content: center;
  }

  &-between {
    justify-content: space-between;
  }

  &-evenly {
    justify-content: space-evenly;

    .text-center {
      flex: 1;
    }
  }
}

.align-items {
  &-start {
    align-items: flex-start;
  }

  &-end {
    align-items: flex-end;
  }

  &-center {
    align-items: center;
  }

  &-baseline {
    align-items: baseline;
  }

  &-stretch {
    align-items: stretch;
  }
}

.align-content {
  &-start {
    align-self: flex-start;
  }

  &-end {
    align-self: flex-end;
  }

  &-center {
    align-self: center;
  }

  &-stretch {
    align-self: stretch;
  }
}

.align-self {
  &-start {
    align-self: flex-start;
  }

  &-end {
    align-self: flex-end;
  }

  &-center {
    align-self: center;
  }

  &-baseline {
    align-self: baseline;
  }

  &-stretch {
    align-self: stretch;
  }
}

.flex-1 {
  @include flex(1 1 0);
}

.flex-2 {
  @include flex(2 2 0);
}

// --------------------
// MARGINS AND PADDINGS
// --------------------
// This function creates bootstrap 4 like padding and margin classes
// https://getbootstrap.com/docs/4.3/utilities/spacing/
@mixin make-margin-padding-css($index, $size-px) {
  .p-#{$index} {
    padding: $size-px;
  }

  .pt-#{$index} {
    padding-top: $size-px;
  }

  .pr-#{$index} {
    padding-right: $size-px;
  }

  .pb-#{$index} {
    padding-bottom: $size-px;
  }

  .pl-#{$index} {
    padding-left: $size-px;
  }

  .px-#{$index} {
    padding-left: $size-px;
    padding-right: $size-px;
  }

  .py-#{$index} {
    padding-top: $size-px;
    padding-bottom: $size-px;
  }

  .m-#{$index} {
    margin: $size-px;
  }

  .mt-#{$index} {
    margin-top: $size-px;
  }

  .mr-#{$index} {
    margin-right: $size-px;
  }

  .mb-#{$index} {
    margin-bottom: $size-px;
  }

  .ml-#{$index} {
    margin-left: $size-px;
  }

  .mx-#{$index} {
    margin-left: $size-px;
    margin-right: $size-px;
  }

  .my-#{$index} {
    margin-top: $size-px;
    margin-bottom: $size-px;
  }
}

@mixin make-margins-and-paddings($size: 4, $index: 1, $increment: 2) {
  @if $size < 128 {
    @include make-margins-and-paddings($size * $increment, $index + 1);
    $size-px: '#{$size}px';

    @include make-margin-padding-css($index, $size-px);
  }
}

// Creates with index 0, by adding this here it can be overriden with custom numbers
// example: <div class="m-0 mb-2">  <---  resets other margins to zero but margin bottom is 2
@include make-margin-padding-css(0, 0);
@include make-margins-and-paddings();

// ------
// COLORS
// ------
// NOTE: These do not support element states such as focus, hover or active
.color {
  &-black-base {
    color: $suomi-blackBase;
  }

  &-black-light1 {
    color: $suomi-blackLight1;
  }

  &-brand-base {
    color: $suomi-brandBase;
  }

  &-highlight {
    &-base {
      color: $suomi-highlightBase;
    }

    &-light {
      &4 {
        color: $suomi-highlightLight4;
      }

      &3 {
        color: $suomi-highlightLight3;
      }

      &2 {
        color: $suomi-highlightLight2;
      }

      &1 {
        color: $suomi-highlightLight1;
      }
    }

    &-dark1 {
      color: $suomi-highlightDark1;
    }
  }

  &-accent {
    &-base {
      color: $suomi-accentBase;
    }

    &-secondary {
      color: $suomi-accentSecondary;

      &-light1 {
        color: $suomi-accentSecondaryLight1;
      }
    }

    &-tertiery {
      color: $suomi-accentTertiary;

      &-dark1 {
        color: $suomi-accentTertiaryDark1;
      }
    }
  }

  &-depth {
    &-base {
      color: $suomi-depthBase;
    }

    &-light {
      &3 {
        color: $suomi-depthLight3;
      }

      &2 {
        color: $suomi-depthLight2;
      }

      &1 {
        color: $suomi-depthLight1;
      }
    }

    &-dark1 {
      color: $suomi-depthDark1;
    }

    &-secondary {
      color: $suomi-depthSecondary;

      &-dark1 {
        color: $suomi-depthSecondaryDark1;
      }
    }
  }

  &-success {
    &-base {
      color: $suomi-successBase;
    }

    &-light-transparent50 {
      color: $suomi-successLightTransparent50;
    }
  }

  &-warning {
    &-base {
      color: $suomi-warningBase;
    }

    &-light47 {
      color: $suomi-warningLight47;
    }
  }

  &-alert-base {
    color: $suomi-alertBase;
  }

  &-white-base {
    color: $suomi-whiteBase;
  }
}

.bg {
  &-black-base {
    background-color: $suomi-blackBase;
  }

  &-black-light1 {
    background-color: $suomi-blackLight1;
  }

  &-brand-base {
    background-color: $suomi-brandBase;
  }

  &-highlight {
    &-base {
      background-color: $suomi-highlightBase;
    }

    &-light {
      &4 {
        background-color: $suomi-highlightLight4;
      }

      &3 {
        background-color: $suomi-highlightLight3;
      }

      &2 {
        background-color: $suomi-highlightLight2;
      }

      &1 {
        background-color: $suomi-highlightLight1;
      }
    }

    &-dark1 {
      background-color: $suomi-highlightDark1;
    }
  }

  &-accent {
    &-base {
      background-color: $suomi-accentBase;
    }

    &-secondary {
      background-color: $suomi-accentSecondary;

      &-light1 {
        background-color: $suomi-accentSecondaryLight1;
      }
    }

    &-tertiery {
      background-color: $suomi-accentTertiary;

      &-dark1 {
        background-color: $suomi-accentTertiaryDark1;
      }
    }
  }

  &-depth {
    &-base {
      background-color: $suomi-depthBase;
    }

    &-light {
      &3 {
        background-color: $suomi-depthLight3;
      }

      &2 {
        background-color: $suomi-depthLight2;
      }

      &1 {
        background-color: $suomi-depthLight1;
      }
    }

    &-dark1 {
      background-color: $suomi-depthDark1;
    }

    &-secondary {
      background-color: $suomi-depthSecondary;

      &-dark1 {
        background-color: $suomi-depthSecondaryDark1;
      }
    }
  }

  &-success {
    &-base {
      background-color: $suomi-successBase;
    }

    &-light-transparent50 {
      background-color: $suomi-successLightTransparent50;
    }
  }

  &-warning {
    &-base {
      background-color: $suomi-warningBase;
    }

    &-light47 {
      background-color: $suomi-warningLight47;
    }
  }

  &-alert-base {
    background-color: $suomi-alertBase;
  }

  &-white-base {
    background-color: $suomi-whiteBase;
  }
}

// -----
// OTHER
// -----
.avoid-page-break {
  page-break-inside: avoid;
}

.position-absolute {
  position: absolute;
}

.position-relative {
  position: relative;
}
