diff --git a/ckan/model/group.py b/ckan/model/group.py
index c95afe5ff..98304d8c7 100644
--- a/ckan/model/group.py
+++ b/ckan/model/group.py
@@ -180,11 +180,16 @@ class Group(core.StatefulObjectMixin,
 
     @classmethod
     def all(cls, group_type: Optional[str] = None,
-            state: tuple[str]=('active',)) -> Query[Self]:
+            state: tuple[str]=('active',),
+            include_extras: bool=False) -> Query[Self]:
         """
         Returns all groups.
         """
         q = meta.Session.query(cls)
+
+        if include_extras:
+            q = q.options(orm.joinedload(cls._extras))
+
         if state:
             # type_ignore_reason: incomplete SQLAlchemy types
             q = q.filter(cls.state.in_(state))  # type: ignore
@@ -283,7 +288,8 @@ class Group(core.StatefulObjectMixin,
         return result
 
     def groups_allowed_to_be_its_parent(
-            self, type: str='group') -> list[Self]:
+            self, type: str='group',
+            include_extras: bool=False) -> list[Self]:
         '''Returns a list of the groups (of the specified type) which are
         allowed to be this group's parent. It excludes ones which would
         create a loop in the hierarchy, causing the recursive CTE to
@@ -292,7 +298,7 @@ class Group(core.StatefulObjectMixin,
         :returns: A list of group objects ordered by group title
 
         '''
-        all_groups = self.all(group_type=type)
+        all_groups = self.all(group_type=type, include_extras=include_extras)
         excluded_groups = set(group_name
                               for _group_id, group_name, _group_title, _parent
                               in self.get_children_group_hierarchy(type=type))
