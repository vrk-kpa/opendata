[DEFAULT]

debug = {{ item.debug_enabled }}
# smtp settings that need to be configured in default section for WebError middleware
smtp_username = {{ ckan_smtp_username }}
smtp_password = {{ ckan_smtp_password }}
smtp_use_tls = {{ ckan_smtp_use_tls }}


[server:main]

use = egg:Paste#http
host = 0.0.0.0
port = 5000

[app:main]

use = egg:ckan
full_stack = true
cache_dir = /tmp/%(ckan.site_id)s/

beaker.session.key = ckan
beaker.session.secret = {{ ckan_beaker_session_secret }}
# Secure session does not currently work in our environments as ssl is terminated on Load balancerreq
#beaker.session.secure = True
beaker.session.httponly = True
beaker.session.type = ext:database
beaker.session.url = postgres://{{ item.db_ckan_username }}:{{ item.db_ckan_password }}@{{ item.db_server }}/{{ item.db_ckan_database }}

app_instance_uuid = {{ ckan_app_instance_uuid }}

who.config_file = %(here)s/who.ini
who.log_level = warning
who.log_file = %(cache_dir)s/who_log.ini

sqlalchemy.url = postgres://{{ item.db_ckan_username }}:{{ item.db_ckan_password }}@{{ item.db_server }}/{{ item.db_ckan_database }}
ckan.site_url = {{ ckan_site_protocol }}://{{ item.hostname }}
ckan.site_url_internally = {{ ckan_site_protocol }}://{{ item.hostname }}/data/

{% raw %}
ckan.root_path = /data/{{LANG}}
{% endraw %}

ckan.datastore.write_url = postgresql://{{ item.db_ckan_username }}:{{ item.db_ckan_password }}@{{ item.db_server }}/{{ item.db_ckan_datastore_database }}
ckan.datastore.read_url = postgresql://{{ item.db_ckan_datastore_username }}:{{ item.db_ckan_datastore_password }}@{{ item.db_server }}/{{ item.db_ckan_datastore_database }}
ckan.datastore.sqlsearch.enabled = True

ckan.redis.url = redis://{{ ckan_redis_host }}:{{ ckan_redis_port }}/{{ item.redis_db }}

ckan.auth.anon_create_dataset = false
ckan.auth.create_unowned_dataset = false
ckan.auth.create_dataset_if_not_in_organization = false
ckan.auth.user_create_groups = true
ckan.auth.user_create_organizations = true
ckan.auth.user_delete_groups = true
ckan.auth.user_delete_organizations = true
ckan.auth.create_user_via_api = false
ckan.auth.create_user_via_web = true
ckan.auth.roles_that_cascade_to_sub_groups = admin
ckan.auth.public_user_details = False

ckan.site_id = {{ ckan_site_id }}

ckan.plugins = {{ ckan_plugins }} {% if ckan_matomo_analytics -%}matomo{%- endif %} {% if ckan_enable_cloudstorage -%} cloudstorage {%- endif %} {{ ckan_plugins_default }}

scheming.dataset_schemas = ckanext.ytp.schemas:dataset.json
                           ckanext.sixodp_showcase.schemas:showcase.json
                           ckanext.apis.schemas:apiset.json
scheming.presets = ckanext.ytp.schemas:presets.json
                   ckanext.scheming:presets.json
                   ckanext.fluent:presets.json
scheming.group_schemas = ckanext.ytp.schemas:group.json
scheming.organization_schemas = ckanext.ytp.schemas:organization.json
advancedsearch.schema = ckanext.advancedsearch:search_fields.json

ckan.site_title = Avoindata.fi
ckan.site_logo =
ckan.site_description =

ckan.favicon = /resources/images/logo/favicon.ico
ckan.gravatar_default = identicon

ckan.locale_default = fi
ckan.locale_order = en_GB pt_BR ja it cs_CZ ca es fr el sv sr sr@latin no sk fi ru de pl nl bg ko_KR hu sa sl lv
ckan.locales_offered = fi sv en_GB
ckan.locales_filtered_out = en
ckan.feeds.authority_name =
ckan.feeds.date = 2019-01-01
ckan.feeds.author_name =
ckan.feeds.author_link =
ckan.search.show_all_types = False
ckan.max_image_size = 5

ckan.cors.origin_allow_all = True
ckan.activity_streams_email_notifications = True
ckan.cache_enabled = True
ckan.cache_expires = 90

email_to = {{ ckan_error_email }}
error_email_from = {{ ckan_error_email_from }}

smtp.server = {{ ckan_smtp_server_domain }}:{{ ckan_smtp_port }}
smtp.user = {{ ckan_smtp_username }}
smtp.password = {{ ckan_smtp_password }}
smtp.starttls = {{ ckan_smtp_use_tls }}
# smtp settings for WebError middleware
from_address = {{ ckan_error_email_from }}
smtp_server = {{ ckan_smtp_server_domain }}:{{ ckan_smtp_port }}

smtp.mail_from = no-reply@{{ ckan_email_domain }}

ckan.views.default_views = recline_grid_view geo_view

ckanext.ytp.drupal.connection = postgres://{{ ckan_postgres.users.drupal8.username }}:{{ ckan_postgres.users.drupal8.password }}@{{ item.db_server }}/{{ ckan_postgres.databases.drupal8.name }}

ckan.harvest.mq.type = redis
ckan.harvest.mq.hostname = {{ ckan_redis_host }}
ckan.harvest.mq.port = {{ ckan_redis_port }}
ckan.harvest.mq.redis_db = {{ item.redis_db }}

ckanext.organizationapproval.admin_email = {{ ckan_admin_email }}

ckanext-archiver.archive_dir = {{ ckan_resource_cache_path }}
ckanext-archiver.max_content_length = 50000000
ckanext-archiver.cache_url_root = {{ ckan_extension_archiver_cache_protocol }}://{{ item.hostname }}/resource_cache/
ckanext-archiver.user_agent_string = {{ item.hostname }} archiver
ckanext-archiver.archive_cloud = True
ckanext-archiver.send_notification_emails_to_maintainers = {{ ckan_notifications_to_maintainers_enabled }}
ckanext-archiver.exempt_domains_from_broken_link_notifications = {{ ckan_exempt_domains_from_broken_link_notifications | join(' ') }}

ckanext.sixodp_showcasesubmit.creating_user_username = {{ ckan_admin.username }}
ckanext.sixodp_showcasesubmit.recaptcha_sitekey = {{ ckan_recaptcha_public_key }}
ckanext.sixodp_showcasesubmit.recaptcha_secret = {{ ckan_recaptcha_private_key }}
ckanext.sixodp_showcasesubmit.recipient_emails = {{ ckan_admin_email }}

ckanext.ytp_recommendation.recaptcha_sitekey = {{ ckan_recaptcha_public_key }}
ckanext.ytp_recommendation.recaptcha_secret = {{ ckan_recaptcha_private_key }}

disqus.name = {{ ckan_disqus_name }}
disqus.notify = True
disqus.notify.name_field = maintainer
disqus.notify.email_field = maintainer_email

ckanext-datarequests.datarequest_notifications_admin_email = None

ckanext.drupal8.domain = {{ item.hostname }},{{ ckan_secondary_hostname }}
ckanext.drupal8.sysadmin_role = {{ ckan_drupal_ckan_admin_rolename }}
ckanext.drupal8.connection = postgres://{{ ckan_postgres.users.drupal8.username }}:{{ ckan_postgres.users.drupal8.password }}@{{ item.db_server }}/{{ ckan_postgres.databases.drupal8.name }}
ckanext.drupal8.allow_edit = true

licenses_group_url = file://{{ ckan_files_path }}/license.json
service_classes_options_url = file://{{ ckan_files_path }}/service_classes.json
municipalities_options_url = file://{{ ckan_files_path }}/municipalities.json
life_situation_options_url = file://{{ ckan_files_path }}/life_situations.json
producer_type_options_url = file://{{ ckan_files_path }}/producer_types.json
producer_type_private_options_url = file://{{ ckan_files_path }}/producer_types_private.json
target_group_options_url = file://{{ ckan_files_path }}/target_groups.json

ckanext.ytp.harvester_status_recipients = {{ ckan_harvester_status_email_recipients|join(' ') }}
ckanext.ytp.fault_recipients = {{ ckan_fault_recipients|join(' ') }}
ckanext.ytp.harvester_instruction_url = {{ ckan_harvester_instruction_url }}

ckanext.prh_tools.mail_recipients = {{ ckan_harvester_status_email_recipients|join(' ') }}

ckanext.forcetranslation.module = ckanext.ytp
ckanext.forcetranslation.path = i18n
ckanext.forcetranslation.domain = ckanext-ytp_main

ckanext.dcat.rdf.profiles = avoindata_dcat_ap
ckanext.dcat.translate_keys = False
ckanext.dcat.base_uri = {{ ckan_site_protocol }}://{{ item.hostname }}/data

ckanext.geoview.ol_viewer.formats = wms wfs geojson

# The email links for reminders will be prefixed with this site url
ckanext.reminder.site_url = {{ ckan_site_protocol }}://{{ item.hostname }}/data

# This configuration can be overwritten in the admin configuration UI
# Default address for sending the reminders
ckanext.reminder.email = <YOUR_EMAIL_ADDRESS>

#The field that is checked for the expiry date for reminders
ckanext.reminder.date_field = valid_till

#Fields for recipients name and email
ckanext.reminder.recipient_name = maintainer
ckanext.reminder.email_field = maintainer_email


{% if ckan_enable_cloudstorage -%}
ckanext.cloudstorage.driver = {{ AWS.region }}
ckanext.cloudstorage.container_name = {{ AWS.ckan_s3_bucket }}
ckanext.cloudstorage.use_secure_urls = 1
{% if not ckan_cloudstorage_local_access -%}
ckanext.cloudstorage.driver_options = {}
{%- endif %}

{% if ckan_cloudstorage_local_access -%}
ckanext.cloudstorage.driver_options = {"key": "{{ AWS.access_key }}", "secret": "{{ AWS.secret_access_key }}", "token": ""}

{%- endif %}
{%- endif %}

sentry.dsn = {{ ckan_sentry_dsn }}
sentry.environment = {{ ckan_deployment_environment_id }}


ofs.impl = pairtree

# 2.1 filestore:
ofs.storage_dir = {{ ckan_files_path }}

# 2.2 filestore:
ckan.storage_path = {{ ckan_files_path }}

{% if ckan_matomo_analytics -%}
ckanext.matomo.site_id = {{ ckan_matomo_analytics.site_id }}
ckanext.matomo.domain = https://{{ ckan_matomo_analytics.domain }}/
ckanext.matomo.script_domain = {{ ckan_matomo_analytics.script_domain }}
ckanext.matomo.token_auth = {{ ckan_matomo_analytics.token_auth }}
{%- endif %}

ckanext.spatial.harvest.continue_on_validation_errors = true

ckanext.spatial.common_map.type = custom
ckanext.spatial.common_map.custom.url = https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png
ckanext.spatial.common_map.attribution = &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors

solr_url = http://{{ ckan_solr_host }}:{{ ckan_solr_port }}/{{ item.solr_path }}

ckan.tracking_enabled = true

ckan.max_resource_size = {{ ckan_max_resource_size }}

ckanext.ytp.theme.show_postit_demo = {{ ckan_show_postit_demo }}

ckan.datapusher.url = http://127.0.0.1:8800/

{% if ckan_profiling_enabled %}
filter-with = linesman
{% endif %}

[loggers]
keys = root, ckan, ckanext

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARNING
handlers = console

[logger_ckan]
level = {{ ckan_loglevel }}
handlers = console
qualname = ckan
propagate = 0

[logger_ckanext]
level = {{ ckan_extension_loglevel }}
handlers = console
qualname = ckanext
propagate = 0

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s

{% if ckan_profiling_enabled %}
[filter:linesman]
use = egg:linesman#profiler
filename = /tmp/linesman.sqlite
{% endif %}
