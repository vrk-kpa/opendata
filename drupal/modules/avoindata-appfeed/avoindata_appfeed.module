<?php

/**
 * @file
 * Adds application feed component.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Component\Utility\Xss;
use Drupal\Component\Serialization\Json;
use League\CommonMark\CommonMarkConverter;
use Drupal\Core\Security\TrustedCallbackInterface;

/**
 * Implements hook_help().
 */
function avoindata_appfeed_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.avoindata_appfeed':
      return t('Creates app feed module.');
  }
}

/**
 * Implements hook_theme().
 */
function avoindata_appfeed_theme($existing, $type, $theme, $path) {
  return [
    'avoindata_appfeed' => [
      'variables' => [
        'applications' => NULL,
        'language' => NULL,
      ],
      'template' => 'avoindata_appfeed_block',
    ],
  ];
}

class AvoindataApplicationHandler implements TrustedCallbackInterface
{


  /**
   * Return HTML of app list.
   */
  function avoindata_recent_applications()
  {
    $client = \Drupal::httpClient();

    try {
      $recentApplicationsResponse = $client->request('POST', 'http://' . getenv('NGINX_HOST') . '/data/api/action/package_search',
        ['json' => ['fq' => 'dataset_type:showcase', 'sort' => 'metadata_modified desc', 'rows' => 3]]);
      $recentApplicationsResult = Json::decode($recentApplicationsResponse->getBody());
      $recentApplications = $recentApplicationsResult['result']['results'];
    } catch (\Exception $e) {
      $recentApplications = [];
    }

    $resultHTML = '';
    $currentLang = \Drupal::languageManager()->getCurrentLanguage()->getId();

    foreach ($recentApplications as $app) {

      if (strlen($app['featured_image']) != 0) {
        $app_featured_image = $app['featured_image_display_url'];
      } elseif (strlen($app['icon_display_url']) != 0) {
        $app_featured_image = $app['icon_display_url'];
      } else {
        $app_featured_image = '/data/images/showcase_placeholder.png';
      }

      $app_date = \Drupal::service('date.formatter')->format(strtotime($app['metadata_created']), 'avoindata_long_date');
      $app_notes = $app['notes_translated'][$currentLang] ?? "";

      if (is_array($app['category']) && array_key_exists($currentLang, $app['category'])) {
        $app_categories = implode(",", $app['category'][$currentLang]);
      } else {
        $app_categories = "";
      }

      $converter = new CommonMarkConverter();
      $renderedNotes = $converter->convertToHtml($app_notes);
      $renderedNotesText = Xss::filter($renderedNotes, array('p'));

      $resultHTML .= <<<EOT
    <div class="avoindata-appfeed-application-box">
            <div class="application-item-logo">
              <a href="/data/{$currentLang}/showcase/{$app['name']}">
                <img class="application-item-img" src="{$app_featured_image}" alt="">
              </a>
            </div>
            <div class="application-item-content>
              <h5 class="appitem-header">
                <a href="/data/{$currentLang}/showcase/{$app['name']}">
                  {$app['title']}
                </a>
              </h5>
              <p class="appitem-metainfo">
                <i class="far fa-clock appitem-fa-icon"></i>
                <a href="/data/{$currentLang}/showcase/{$app['name']}">
                  {$app_date}
                </a>
                <i class="fas fa-folder appitem-fa-icon"></i>
                <a href="/data/{$currentLang}/showcase/{$app['name']}">
                  {$app_categories}
                </a>
              </p>
              <div class="appitem-content">
                <a href="/data/{$currentLang}/showcase/{$app['name']}">
                  <p>
                    {$renderedNotesText}
                  </p>
                </a>
              </div>
            </div>
          </div>
EOT;
    }

    return [
      '#markup' => $resultHTML,
      '#cache' => ['max-age' => 0],
    ];
  }

  /**
   * {@inheritdoc}
   */
  public static function trustedCallbacks() {
    return ['avoindata_recent_applications'];
  }
}
