<?php

/**
 * @file
 * Adds avoindata hero module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Component\Serialization\Json;
use Drupal\Core\Security\TrustedCallbackInterface;
use Drupal\Core\StringTranslation\StringTranslationTrait;

/**
 * Implements hook_help().
 */
function avoindata_hero_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.avoindata_hero':
      return t('
        Creates header that can be exported to non-Drupal pages.
      ');
  }
}

/**
 * Implements hook_theme().
 */
function avoindata_hero_theme($existing, $type, $theme, $path) {
  return [
    'avoindata_hero' => [
      'render element' => 'form',
      'template' => 'avoindata_hero_form',
    ],
  ];
}

class AvoindataHeroHandler implements TrustedCallbackInterface
{
  use StringTranslationTrait;

  /**
   * Queries statistics from ckan.
   *
   * @return array
   *   Returns markup.
   */
  function avoindata_hero_ckan_statistics()
  {
    $client = \Drupal::httpClient();

    try {
      $response = $client->request('GET', 'http://' . getenv('DRUPAL_CKAN_HOST') . '/data/api/3/action/statistics');
      $result = Json::decode($response->getBody());
      $ckan_statistics = $result['result'];
    } catch (\Exception $e) {
      $ckan_statistics = [
        'datasets' => '0',
        'apisets' => '0',
        'organizations' => '0',
        'showcases' => '0'
      ];
    }


    $statistics = array(
      [
        'count' => $ckan_statistics['datasets'],
        'url' => 'dataset',
        'text' => $this->t('Datasets', [], ['context' => 'x datasets'] )
      ],
      [
        'count' => $ckan_statistics['apisets'],
        'url' => 'apiset',
        'text' => $this->t('Apisets', [], ['context' => 'x apisets'])
      ],
      [
        'count' => $ckan_statistics['organizations'],
        'url' => 'organization',
        'text' => $this->t('Organizations', [], ['context' => 'x organizations'])
      ],
      [
        'count' => $ckan_statistics['showcases'],
        'url' => 'showcase',
        'text' => $this->t('Applications', [], ['context' => 'x applications'])
      ]
    );

    $language = \Drupal::languageManager()->getCurrentLanguage()->getId();
    $statistics_markup = '';

    foreach ($statistics as $statistic) {
    $statistics_markup .= <<<EOT
        <div class="text-center">
                    <h2>{$statistic['count']}</h2>
                    <h4>
                        <a href="/data/{$language}/{$statistic['url']}">
                            <strong>{$statistic['text']}</strong>
                        </a>
                    </h4>
                </div>
EOT;
    }
    return [
      '#markup' => $statistics_markup,
      '#cache' => ['max-age' => 0],
    ];
  }

  /**
   * {@inheritdoc}
   */
  public static function trustedCallbacks() {
    return ['avoindata_hero_ckan_statistics'];
  }
}
