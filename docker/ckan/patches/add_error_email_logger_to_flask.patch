From baf875b44db592152cf272a60699b6153cecc43e Mon Sep 17 00:00:00 2001
From: Jari Voutilainen <jari.voutilainen@iki.fi>
Date: Thu, 17 Jan 2019 13:11:44 +0200
Subject: [PATCH 1/3] Add simple email error logger to flask

---
 ckan/config/middleware/flask_app.py | 37 +++++++++++++++++++++++++++++
 1 file changed, 37 insertions(+)

diff --git a/ckan/config/middleware/flask_app.py b/ckan/config/middleware/flask_app.py
index 3593ff1c93..b5fea1f746 100644
--- a/ckan/config/middleware/flask_app.py
+++ b/ckan/config/middleware/flask_app.py
@@ -1,6 +1,7 @@
 # encoding: utf-8

 import os
+import sys
 import re
 import time
 import inspect
@@ -41,6 +42,7 @@

 import ckan.lib.plugins as lib_plugins
 import logging
+from logging.handlers import SMTPHandler
 log = logging.getLogger(__name__)


@@ -115,6 +117,7 @@ def make_flask_stack(conf, **app_conf):
         log = logging.getLogger('werkzeug')
         log.setLevel(logging.DEBUG)

+
     # Use Beaker as the Flask session interface
     class BeakerSessionInterface(SessionInterface):
         def open_session(self, app, request):
@@ -442,6 +445,7 @@ def _register_error_handler(app):
     u'''Register error handler'''

     def error_handler(e):
+        log.error(e, exc_info=sys.exc_info)
         if isinstance(e, HTTPException):
             extra_vars = {u'code': [e.code], u'content': e.description}
             # TODO: Remove
@@ -456,3 +460,36 @@ def error_handler(e):
         app.register_error_handler(code, error_handler)
     if not app.debug and not app.testing:
         app.register_error_handler(Exception, error_handler)
+
+
+
+def _setup_error_mail_handler(app):
+
+    class ContextualFilter(logging.Filter):
+        def filter(self, log_record):
+            log_record.url = request.path
+            log_record.method = request.method
+            log_record.ip = request.environ.get("REMOTE_ADDR")
+            log_record.headers = request.headers
+            log_record.exception = log_record.exc_info
+            return True
+
+    mailhost = tuple(config.get('smtp.server', 'localhost').split(":"))
+    mail_handler = SMTPHandler(
+        mailhost=mailhost,
+        fromaddr=config.get('error_email_from'),
+        toaddrs=[config.get('email_to')],
+        subject='Application Error'
+    )
+
+    mail_handler.setFormatter(logging.Formatter('''
+Time:               %(asctime)s
+URL:                %(url)s
+Method:             %(method)s
+Headers:            %(headers)s
+
+'''))
+
+    context_provider = ContextualFilter()
+    app.logger.addFilter(context_provider)
+    app.logger.addHandler(mail_handler)

From ee58488cdebf8c83ae0f1ca3990581db3efd7994 Mon Sep 17 00:00:00 2001
From: Jari Voutilainen <jari.voutilainen@iki.fi>
Date: Thu, 17 Jan 2019 13:36:49 +0200
Subject: [PATCH 2/3] flake8

---
 ckan/config/middleware/flask_app.py | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/ckan/config/middleware/flask_app.py b/ckan/config/middleware/flask_app.py
index b5fea1f746..0dd585bae7 100644
--- a/ckan/config/middleware/flask_app.py
+++ b/ckan/config/middleware/flask_app.py
@@ -117,7 +117,6 @@ def make_flask_stack(conf, **app_conf):
         log = logging.getLogger('werkzeug')
         log.setLevel(logging.DEBUG)

-
     # Use Beaker as the Flask session interface
     class BeakerSessionInterface(SessionInterface):
         def open_session(self, app, request):
@@ -463,6 +462,7 @@ def error_handler(e):



+
 def _setup_error_mail_handler(app):

     class ContextualFilter(logging.Filter):

From db21c64b49f7758d45bd39b901ad8613663f2c87 Mon Sep 17 00:00:00 2001
From: Jari Voutilainen <jari.voutilainen@iki.fi>
Date: Thu, 17 Jan 2019 13:51:38 +0200
Subject: [PATCH 3/3] Cleanup log formatting

---
 ckan/config/middleware/flask_app.py | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/ckan/config/middleware/flask_app.py b/ckan/config/middleware/flask_app.py
index 0dd585bae7..a8406bfd45 100644
--- a/ckan/config/middleware/flask_app.py
+++ b/ckan/config/middleware/flask_app.py
@@ -471,7 +471,6 @@ def filter(self, log_record):
             log_record.method = request.method
             log_record.ip = request.environ.get("REMOTE_ADDR")
             log_record.headers = request.headers
-            log_record.exception = log_record.exc_info
             return True

     mailhost = tuple(config.get('smtp.server', 'localhost').split(":"))
@@ -486,6 +485,7 @@ def filter(self, log_record):
 Time:               %(asctime)s
 URL:                %(url)s
 Method:             %(method)s
+IP:                 %(ip)s
 Headers:            %(headers)s

 '''))
